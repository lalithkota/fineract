# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: mifos-self-service-constants
data:
  app.constants.js: |
    (function(){
      'use strict';

      angular.module('selfService')

      .constant("BASE_URL", "https://bank1-self-dev.openg2p.mosip.net/fineract-provider/api/v1")

      .constant('AUTH_EVENTS', {
        updateUser: 'update-user',
        notAuthorized: 'auth-not-authorized',
        notAuthenticated: 'auth-not-authenticated'
      })

      .constant("TENANT_IDENTIFIER", "tn03")

      .constant('USER_ROLES', {
        user: 'USER'
      });
    })();
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: mifos-self-service
  name: mifos-self-service
spec:
  ports:
  - protocol: TCP
    port: 80
  selector:
    app: mifos-self-service
    tier: frontend
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mifos-self-service
  labels:
    app: mifos-self-service
spec:
  selector:
    matchLabels:
      app: mifos-self-service
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mifos-self-service
        tier: frontend
    spec:
      initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ['sh', '-c', 'echo -e "Checking for the availability of Fineract server deployment"; while ! nc -z "fineract-server" 8080; do sleep 1; printf "-"; done; echo -e " >> Fineract server has started";']
      containers:
      - name: self-service
        image: lalithkota/fineract-self-service:develop
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 1
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: mifos-self-service-constants
          mountPath: "/usr/share/nginx/html/app.constants.js"
          subPath: "app.constants.js"
      volumes:
        - name: mifos-self-service-constants
          configMap:
            name: mifos-self-service-constants
